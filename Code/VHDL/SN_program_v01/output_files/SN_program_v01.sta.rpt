TimeQuest Timing Analyzer report for SN_program_v01
Wed Apr 16 08:52:20 2014
Quartus II 64-Bit Version 12.1 Build 177 11/07/2012 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'CLK'
 12. Slow Model Hold: 'CLK'
 13. Slow Model Minimum Pulse Width: 'CLK'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'CLK'
 24. Fast Model Hold: 'CLK'
 25. Fast Model Minimum Pulse Width: 'CLK'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2012 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                      ;
+--------------------+---------------------------------------------------+
; Quartus II Version ; Version 12.1 Build 177 11/07/2012 SJ Full Version ;
; Revision Name      ; SN_program_v01                                    ;
; Device Family      ; Cyclone II                                        ;
; Device Name        ; EP2C35F672C6                                      ;
; Timing Models      ; Final                                             ;
; Delay Model        ; Combined                                          ;
; Rise/Fall Delays   ; Unavailable                                       ;
+--------------------+---------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     1 processor            ; 100.0%      ;
;     2 processors           ; < 0.1%      ;
;     3-4 processors         ;   0.0%      ;
+----------------------------+-------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; CLK        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLK } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 144.09 MHz ; 144.09 MHz      ; CLK        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; CLK   ; -2.970 ; -119.966      ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; CLK   ; 0.391 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; CLK   ; -1.222 ; -58.222               ;
+-------+--------+-----------------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLK'                                                                                                                ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; -2.970 ; m_a_bit4                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.301     ; 3.205      ;
; -2.957 ; start_bit1              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.532      ; 4.025      ;
; -2.957 ; start_bit1              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.532      ; 4.025      ;
; -2.951 ; m_a_bit3                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.301     ; 3.186      ;
; -2.932 ; address_counter[2]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.931      ;
; -2.898 ; start_bit8              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.897      ;
; -2.893 ; m_a_bit4                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.664      ;
; -2.893 ; m_a_bit4                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.664      ;
; -2.879 ; start_bit6              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.878      ;
; -2.874 ; m_a_bit3                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.645      ;
; -2.874 ; m_a_bit3                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.645      ;
; -2.857 ; m_a_bit2                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.301     ; 3.092      ;
; -2.807 ; address_counter[1]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.342      ;
; -2.807 ; address_counter[1]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.342      ;
; -2.787 ; address_counter[1]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.786      ;
; -2.780 ; m_a_bit2                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.551      ;
; -2.780 ; m_a_bit2                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.551      ;
; -2.760 ; address_counter[0]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.295      ;
; -2.760 ; address_counter[0]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.295      ;
; -2.743 ; start_bit3              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.811      ;
; -2.743 ; start_bit3              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.811      ;
; -2.728 ; m_a_bit1                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.301     ; 2.963      ;
; -2.718 ; start_bit1              ; f_state.get_data              ; CLK          ; CLK         ; 0.500        ; 0.295      ; 3.549      ;
; -2.716 ; start_bit8              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.251      ;
; -2.716 ; start_bit8              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.251      ;
; -2.707 ; start_bit5              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.706      ;
; -2.697 ; start_bit6              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.232      ;
; -2.697 ; start_bit6              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.232      ;
; -2.689 ; fault                   ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.512     ; 2.713      ;
; -2.665 ; r_state.check_address   ; f_state.idle                  ; CLK          ; CLK         ; 1.000        ; -0.299     ; 3.402      ;
; -2.657 ; address_counter[0]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.656      ;
; -2.651 ; m_a_bit1                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.422      ;
; -2.651 ; m_a_bit1                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.235      ; 3.422      ;
; -2.606 ; m_f_bit3                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.182      ;
; -2.606 ; m_f_bit3                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.182      ;
; -2.606 ; m_f_bit3                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.182      ;
; -2.603 ; start_bit7              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.537     ; 2.602      ;
; -2.582 ; m_f_bit4                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.158      ;
; -2.582 ; m_f_bit4                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.158      ;
; -2.582 ; m_f_bit4                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.158      ;
; -2.580 ; start_bit1              ; r_state.idle                  ; CLK          ; CLK         ; 0.500        ; 0.295      ; 3.411      ;
; -2.574 ; start_bit2              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.642      ;
; -2.574 ; start_bit2              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.642      ;
; -2.545 ; m_f_bit3                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[15]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[13]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[9]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.545 ; m_f_bit3                ; Respond_Data[17]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 3.002      ;
; -2.535 ; address_counter[2]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.070      ;
; -2.535 ; address_counter[2]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.070      ;
; -2.525 ; start_bit5              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.060      ;
; -2.525 ; start_bit5              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; -0.001     ; 3.060      ;
; -2.521 ; m_f_bit4                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[15]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[13]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[9]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.521 ; m_f_bit4                ; Respond_Data[17]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.978      ;
; -2.504 ; start_bit3              ; f_state.get_data              ; CLK          ; CLK         ; 0.500        ; 0.295      ; 3.335      ;
; -2.486 ; m_f_bit3                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.521     ; 2.501      ;
; -2.483 ; m_f_bit1                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.059      ;
; -2.483 ; m_f_bit1                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.059      ;
; -2.483 ; m_f_bit1                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.040      ; 3.059      ;
; -2.477 ; start_bit8              ; f_state.get_data              ; CLK          ; CLK         ; 0.500        ; -0.238     ; 2.775      ;
; -2.472 ; m_f_bit4                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.521     ; 2.487      ;
; -2.461 ; start_bit4              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.529      ;
; -2.461 ; start_bit4              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.532      ; 3.529      ;
; -2.458 ; start_bit6              ; f_state.get_data              ; CLK          ; CLK         ; 0.500        ; -0.238     ; 2.756      ;
; -2.449 ; functioncode_counter[0] ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.015      ; 3.000      ;
; -2.449 ; functioncode_counter[0] ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.015      ; 3.000      ;
; -2.446 ; respond_counter[2]      ; output_data                   ; CLK          ; CLK         ; 1.000        ; 0.328      ; 3.810      ;
; -2.437 ; fault                   ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.024      ; 2.997      ;
; -2.437 ; fault                   ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.024      ; 2.997      ;
; -2.422 ; m_f_bit1                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
; -2.422 ; m_f_bit1                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.079     ; 2.879      ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLK'                                                                                                                      ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                     ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; manchester_counter            ; manchester_counter            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m1                            ; m1                            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; address_counter[1]            ; address_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; address_counter[2]            ; address_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit1                    ; start_bit1                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit2                    ; start_bit2                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit3                    ; start_bit3                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit4                    ; start_bit4                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit5                    ; start_bit5                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit6                    ; start_bit6                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit7                    ; start_bit7                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; start_bit8                    ; start_bit8                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; manchester_bit                ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_a_bit1                      ; m_a_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_a_bit2                      ; m_a_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_a_bit3                      ; m_a_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_a_bit4                      ; m_a_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_counter[0]            ; respond_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_counter[1]            ; respond_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_counter[2]            ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_counter[4]            ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_counter[3]            ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; respond_flag                  ; respond_flag                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_f_bit1                      ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_f_bit2                      ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_f_bit3                      ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; m_f_bit4                      ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; functioncode_counter[0]       ; functioncode_counter[0]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; functioncode_counter[1]       ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; functioncode_counter[2]       ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; fault                         ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; address_counter[0]            ; address_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; f_state.get_data              ; f_state.get_data              ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.657      ;
; 0.532 ; start_bit7                    ; start_bit8                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.798      ;
; 0.533 ; respond_counter[4]            ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.799      ;
; 0.554 ; respond_counter[0]            ; respond_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.820      ;
; 0.659 ; respond_counter[4]            ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.328      ; 1.253      ;
; 0.724 ; respond_counter[3]            ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.990      ;
; 0.734 ; respond_counter[1]            ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.000      ;
; 0.738 ; r_state.check_address         ; f_state.manchester_converting ; CLK          ; CLK         ; 0.000        ; 0.237      ; 1.241      ;
; 0.773 ; respond_counter[3]            ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.328      ; 1.367      ;
; 0.799 ; start_bit1                    ; start_bit2                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.065      ;
; 0.800 ; r_state.idle                  ; r_state.check_address         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.066      ;
; 0.801 ; start_bit3                    ; start_bit4                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.067      ;
; 0.808 ; start_bit6                    ; start_bit7                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.074      ;
; 0.816 ; m_a_bit2                      ; m_a_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.082      ;
; 0.816 ; m_a_bit3                      ; m_a_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.082      ;
; 0.953 ; r_state.check_functioncode    ; f_state.manchester_converting ; CLK          ; CLK         ; 0.000        ; 0.536      ; 1.755      ;
; 0.956 ; start_bit4                    ; start_bit5                    ; CLK          ; CLK         ; 0.000        ; 0.533      ; 1.755      ;
; 0.959 ; r_state.idle                  ; f_state.get_data              ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.225      ;
; 0.961 ; r_state.idle                  ; r_state.idle                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.227      ;
; 0.964 ; start_bit5                    ; start_bit6                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.230      ;
; 0.981 ; start_bit2                    ; start_bit3                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.247      ;
; 0.999 ; m_a_bit1                      ; m_a_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.265      ;
; 1.015 ; respond_counter[0]            ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.281      ;
; 1.017 ; m_f_bit1                      ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.283      ;
; 1.019 ; functioncode_counter[0]       ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.285      ;
; 1.032 ; address_counter[0]            ; address_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.298      ;
; 1.154 ; manchester_counter            ; functioncode_counter[0]       ; CLK          ; CLK         ; 0.000        ; 0.517      ; 1.937      ;
; 1.192 ; manchester_counter            ; m1                            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.458      ;
; 1.192 ; manchester_counter            ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.458      ;
; 1.227 ; m_f_bit3                      ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.493      ;
; 1.230 ; respond_flag                  ; f_state.manchester_converting ; CLK          ; CLK         ; -0.500       ; 0.532      ; 1.528      ;
; 1.232 ; respond_counter[1]            ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.328      ; 1.826      ;
; 1.236 ; m_f_bit2                      ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.502      ;
; 1.261 ; m1                            ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.044      ;
; 1.264 ; manchester_counter            ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.508      ; 2.038      ;
; 1.268 ; r_state.check_address         ; r_state.check_address         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.534      ;
; 1.320 ; respond_counter[2]            ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.586      ;
; 1.349 ; respond_counter[0]            ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.328      ; 1.943      ;
; 1.357 ; respond_counter[2]            ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.623      ;
; 1.372 ; m1                            ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.638      ;
; 1.387 ; m1                            ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.508      ; 2.161      ;
; 1.387 ; respond_counter[1]            ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.653      ;
; 1.399 ; manchester_bit                ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.182      ;
; 1.424 ; respond_counter[1]            ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.690      ;
; 1.446 ; respond_counter[0]            ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.712      ;
; 1.462 ; f_state.idle                  ; f_state.idle                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.728      ;
; 1.471 ; f_state.get_data              ; address_counter[0]            ; CLK          ; CLK         ; -0.500       ; 0.238      ; 1.475      ;
; 1.481 ; manchester_counter            ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.264      ;
; 1.483 ; manchester_counter            ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.266      ;
; 1.483 ; respond_counter[0]            ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 1.749      ;
; 1.485 ; manchester_counter            ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.268      ;
; 1.487 ; manchester_counter            ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.270      ;
; 1.490 ; manchester_counter            ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.273      ;
; 1.491 ; manchester_counter            ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.517      ; 2.274      ;
; 1.494 ; f_state.idle                  ; start_bit7                    ; CLK          ; CLK         ; -0.500       ; 0.537      ; 1.797      ;
; 1.495 ; f_state.idle                  ; start_bit5                    ; CLK          ; CLK         ; -0.500       ; 0.537      ; 1.798      ;
; 1.520 ; f_state.idle                  ; start_bit6                    ; CLK          ; CLK         ; -0.500       ; 0.537      ; 1.823      ;
; 1.520 ; f_state.idle                  ; start_bit8                    ; CLK          ; CLK         ; -0.500       ; 0.537      ; 1.823      ;
; 1.527 ; f_state.get_info              ; address_counter[0]            ; CLK          ; CLK         ; -0.500       ; 0.001      ; 1.294      ;
; 1.530 ; f_state.get_data              ; functioncode_counter[0]       ; CLK          ; CLK         ; -0.500       ; 0.222      ; 1.518      ;
; 1.535 ; f_state.manchester_converting ; fault                         ; CLK          ; CLK         ; -0.500       ; -0.024     ; 1.277      ;
; 1.536 ; r_state.check_address         ; address_counter[1]            ; CLK          ; CLK         ; -0.500       ; 0.238      ; 1.540      ;
; 1.536 ; r_state.check_address         ; address_counter[2]            ; CLK          ; CLK         ; -0.500       ; 0.238      ; 1.540      ;
; 1.536 ; f_state.idle                  ; start_bit4                    ; CLK          ; CLK         ; -0.500       ; 0.004      ; 1.306      ;
; 1.540 ; f_state.idle                  ; start_bit1                    ; CLK          ; CLK         ; -0.500       ; 0.004      ; 1.310      ;
; 1.541 ; f_state.idle                  ; start_bit2                    ; CLK          ; CLK         ; -0.500       ; 0.004      ; 1.311      ;
; 1.542 ; f_state.idle                  ; start_bit3                    ; CLK          ; CLK         ; -0.500       ; 0.004      ; 1.312      ;
; 1.557 ; manchester_counter            ; address_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.533      ; 2.356      ;
+-------+-------------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLK'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; CLK   ; Rise       ; CLK                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[10]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[10]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[11]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[11]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[12]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[12]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[13]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[13]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[14]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[14]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[15]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[15]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[17]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[17]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[8]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[8]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[9]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[9]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.get_data              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.get_data              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.get_info              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.get_info              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.manchester_converting ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.manchester_converting ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; fault                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; fault                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m1                            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m1                            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; manchester_bit                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; manchester_bit                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; manchester_counter            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; manchester_counter            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; output_data                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; output_data                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.check_address         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.check_address         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.check_functioncode    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.check_functioncode    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[3]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[3]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[4]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[4]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_flag                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_flag                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; start_bit1                    ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+--------------------------------------------------------------------------------+
; Setup Times                                                                    ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; 4.696  ; 4.696  ; Rise       ; CLK             ;
; RESET            ; CLK        ; 6.217  ; 6.217  ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 5.245  ; 5.245  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; -0.463 ; -0.463 ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; -0.462 ; -0.462 ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; -0.317 ; -0.317 ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; 0.784  ; 0.784  ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; 0.796  ; 0.796  ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; 0.833  ; 0.833  ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; 0.745  ; 0.745  ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; 0.698  ; 0.698  ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; 0.794  ; 0.794  ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; 0.688  ; 0.688  ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; 0.539  ; 0.539  ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; 0.652  ; 0.652  ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; 0.675  ; 0.675  ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; 5.221  ; 5.221  ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; 5.225  ; 5.225  ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; 5.245  ; 5.245  ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; -3.489 ; -3.489 ; Rise       ; CLK             ;
; RESET            ; CLK        ; -5.158 ; -5.158 ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 0.693  ; 0.693  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; 0.693  ; 0.693  ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; 0.692  ; 0.692  ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; 0.547  ; 0.547  ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; -0.554 ; -0.554 ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; -0.566 ; -0.566 ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; -0.603 ; -0.603 ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; -0.515 ; -0.515 ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; -0.468 ; -0.468 ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; -0.564 ; -0.564 ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; -0.458 ; -0.458 ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; -0.309 ; -0.309 ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; -0.422 ; -0.422 ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; -0.445 ; -0.445 ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; -4.991 ; -4.991 ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; -4.995 ; -4.995 ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; -5.015 ; -5.015 ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 7.179 ; 7.179 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 7.179 ; 7.179 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; CLK   ; -1.097 ; -40.350       ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; CLK   ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; CLK   ; -1.222 ; -58.222               ;
+-------+--------+-----------------------+


+----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLK'                                                                                                                ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node               ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; -1.097 ; start_bit1              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.867      ;
; -1.097 ; start_bit1              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.867      ;
; -1.071 ; m_a_bit3                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.705      ;
; -1.071 ; m_a_bit3                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.705      ;
; -1.070 ; m_a_bit4                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.704      ;
; -1.070 ; m_a_bit4                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.704      ;
; -1.053 ; address_counter[1]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.585      ;
; -1.053 ; address_counter[1]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.585      ;
; -1.046 ; m_a_bit3                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.136     ; 1.442      ;
; -1.045 ; m_a_bit4                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.136     ; 1.441      ;
; -1.034 ; address_counter[0]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.566      ;
; -1.034 ; address_counter[0]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.566      ;
; -1.014 ; address_counter[2]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.308      ;
; -1.009 ; start_bit3              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.779      ;
; -1.009 ; start_bit3              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.779      ;
; -1.004 ; m_a_bit2                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.638      ;
; -1.004 ; m_a_bit2                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.638      ;
; -0.985 ; start_bit8              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.279      ;
; -0.982 ; start_bit8              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.514      ;
; -0.982 ; start_bit8              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.514      ;
; -0.982 ; start_bit6              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.276      ;
; -0.981 ; m_f_bit4                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.539      ;
; -0.981 ; m_f_bit4                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.539      ;
; -0.981 ; m_f_bit4                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.539      ;
; -0.979 ; m_a_bit2                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.136     ; 1.375      ;
; -0.979 ; start_bit6              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.511      ;
; -0.979 ; start_bit6              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.511      ;
; -0.979 ; m_f_bit3                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.537      ;
; -0.979 ; m_f_bit3                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.537      ;
; -0.979 ; m_f_bit3                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.537      ;
; -0.967 ; m_f_bit4                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[15]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[13]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[9]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.967 ; m_f_bit4                ; Respond_Data[17]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.460      ;
; -0.965 ; m_f_bit3                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[15]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[13]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[9]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.965 ; m_f_bit3                ; Respond_Data[17]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.458      ;
; -0.954 ; m_a_bit1                ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.588      ;
; -0.954 ; m_a_bit1                ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.102      ; 1.588      ;
; -0.942 ; address_counter[1]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.236      ;
; -0.940 ; start_bit2              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.710      ;
; -0.940 ; start_bit2              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.710      ;
; -0.929 ; m_a_bit1                ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.136     ; 1.325      ;
; -0.926 ; fault                   ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.224     ; 1.234      ;
; -0.921 ; start_bit1              ; f_state.get_data              ; CLK          ; CLK         ; 0.500        ; 0.136      ; 1.589      ;
; -0.919 ; address_counter[2]      ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.451      ;
; -0.919 ; address_counter[2]      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.451      ;
; -0.915 ; start_bit5              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.209      ;
; -0.912 ; start_bit5              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.444      ;
; -0.912 ; start_bit5              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.444      ;
; -0.905 ; m_f_bit1                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.463      ;
; -0.905 ; m_f_bit1                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.463      ;
; -0.905 ; m_f_bit1                ; Respond_Data[12]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.463      ;
; -0.903 ; start_bit4              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.673      ;
; -0.903 ; start_bit4              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.238      ; 1.673      ;
; -0.891 ; m_f_bit1                ; Respond_Data[4]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[6]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[2]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[0]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[5]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[7]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[3]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[1]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[8]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[11]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[15]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[13]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[9]               ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.891 ; m_f_bit1                ; Respond_Data[17]              ; CLK          ; CLK         ; 0.500        ; -0.039     ; 1.384      ;
; -0.889 ; address_counter[0]      ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.183      ;
; -0.888 ; functioncode_counter[0] ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.005      ; 1.425      ;
; -0.888 ; functioncode_counter[0] ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.005      ; 1.425      ;
; -0.885 ; start_bit7              ; f_state.idle                  ; CLK          ; CLK         ; 0.500        ; -0.238     ; 1.179      ;
; -0.885 ; fault                   ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.014      ; 1.431      ;
; -0.885 ; fault                   ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.014      ; 1.431      ;
; -0.882 ; start_bit7              ; f_state.get_info              ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.414      ;
; -0.882 ; start_bit7              ; f_state.manchester_converting ; CLK          ; CLK         ; 0.500        ; 0.000      ; 1.414      ;
; -0.862 ; m_f_bit2                ; Respond_Data[10]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.420      ;
; -0.862 ; m_f_bit2                ; Respond_Data[14]              ; CLK          ; CLK         ; 0.500        ; 0.026      ; 1.420      ;
+--------+-------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLK'                                                                                                                   ;
+-------+----------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                  ; To Node                       ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+----------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; manchester_counter         ; manchester_counter            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m1                         ; m1                            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; address_counter[1]         ; address_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; address_counter[2]         ; address_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit1                 ; start_bit1                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit2                 ; start_bit2                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit3                 ; start_bit3                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit4                 ; start_bit4                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit5                 ; start_bit5                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit6                 ; start_bit6                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit7                 ; start_bit7                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; start_bit8                 ; start_bit8                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; manchester_bit             ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_a_bit1                   ; m_a_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_a_bit2                   ; m_a_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_a_bit3                   ; m_a_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_a_bit4                   ; m_a_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_counter[0]         ; respond_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_counter[1]         ; respond_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_counter[2]         ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_counter[4]         ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_counter[3]         ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; respond_flag               ; respond_flag                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_f_bit1                   ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_f_bit2                   ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_f_bit3                   ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; m_f_bit4                   ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; functioncode_counter[0]    ; functioncode_counter[0]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; functioncode_counter[1]    ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; functioncode_counter[2]    ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; fault                      ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; address_counter[0]         ; address_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; f_state.get_data           ; f_state.get_data              ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.367      ;
; 0.245 ; respond_counter[4]         ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.397      ;
; 0.247 ; start_bit7                 ; start_bit8                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.399      ;
; 0.257 ; respond_counter[0]         ; respond_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.409      ;
; 0.304 ; respond_counter[4]         ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.157      ; 0.613      ;
; 0.331 ; respond_counter[3]         ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.483      ;
; 0.337 ; respond_counter[3]         ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.157      ; 0.646      ;
; 0.338 ; respond_counter[1]         ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.490      ;
; 0.343 ; r_state.check_address      ; f_state.manchester_converting ; CLK          ; CLK         ; 0.000        ; 0.102      ; 0.597      ;
; 0.359 ; start_bit1                 ; start_bit2                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.511      ;
; 0.363 ; start_bit3                 ; start_bit4                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.515      ;
; 0.368 ; start_bit6                 ; start_bit7                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.520      ;
; 0.369 ; m_a_bit3                   ; m_a_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.521      ;
; 0.371 ; m_a_bit2                   ; m_a_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.523      ;
; 0.374 ; r_state.idle               ; r_state.check_address         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.526      ;
; 0.426 ; start_bit4                 ; start_bit5                    ; CLK          ; CLK         ; 0.000        ; 0.238      ; 0.816      ;
; 0.428 ; r_state.idle               ; f_state.get_data              ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.580      ;
; 0.430 ; r_state.idle               ; r_state.idle                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.582      ;
; 0.439 ; start_bit5                 ; start_bit6                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.591      ;
; 0.440 ; start_bit2                 ; start_bit3                    ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.592      ;
; 0.448 ; m_a_bit1                   ; m_a_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.600      ;
; 0.450 ; m_f_bit1                   ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.602      ;
; 0.451 ; respond_counter[0]         ; respond_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.603      ;
; 0.459 ; functioncode_counter[0]    ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.611      ;
; 0.460 ; address_counter[0]         ; address_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.612      ;
; 0.462 ; r_state.check_functioncode ; f_state.manchester_converting ; CLK          ; CLK         ; 0.000        ; 0.238      ; 0.852      ;
; 0.516 ; manchester_counter         ; functioncode_counter[0]       ; CLK          ; CLK         ; 0.000        ; 0.233      ; 0.901      ;
; 0.536 ; m1                         ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 0.921      ;
; 0.539 ; manchester_counter         ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.691      ;
; 0.542 ; manchester_counter         ; m1                            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.694      ;
; 0.543 ; m_f_bit3                   ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.695      ;
; 0.547 ; m_f_bit2                   ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.699      ;
; 0.560 ; respond_counter[1]         ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.157      ; 0.869      ;
; 0.586 ; r_state.check_address      ; r_state.check_address         ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.738      ;
; 0.589 ; manchester_counter         ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.224      ; 0.965      ;
; 0.589 ; respond_counter[0]         ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.157      ; 0.898      ;
; 0.592 ; m1                         ; manchester_bit                ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.744      ;
; 0.605 ; manchester_bit             ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 0.990      ;
; 0.612 ; m1                         ; fault                         ; CLK          ; CLK         ; 0.000        ; 0.224      ; 0.988      ;
; 0.613 ; respond_counter[2]         ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.765      ;
; 0.619 ; respond_counter[2]         ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.771      ;
; 0.631 ; respond_counter[1]         ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.783      ;
; 0.637 ; respond_counter[1]         ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.789      ;
; 0.654 ; f_state.idle               ; f_state.idle                  ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.806      ;
; 0.658 ; manchester_counter         ; m_f_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.043      ;
; 0.660 ; manchester_counter         ; m_f_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.045      ;
; 0.662 ; manchester_counter         ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.047      ;
; 0.664 ; manchester_counter         ; functioncode_counter[1]       ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.049      ;
; 0.666 ; manchester_counter         ; m_f_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.051      ;
; 0.667 ; manchester_counter         ; m_f_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.233      ; 1.052      ;
; 0.668 ; respond_counter[0]         ; respond_counter[3]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.820      ;
; 0.674 ; respond_counter[0]         ; respond_counter[4]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.826      ;
; 0.685 ; manchester_counter         ; address_counter[0]            ; CLK          ; CLK         ; 0.000        ; 0.238      ; 1.075      ;
; 0.705 ; respond_counter[2]         ; output_data                   ; CLK          ; CLK         ; 0.000        ; 0.157      ; 1.014      ;
; 0.710 ; manchester_counter         ; address_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.238      ; 1.100      ;
; 0.711 ; manchester_counter         ; address_counter[1]            ; CLK          ; CLK         ; 0.000        ; 0.238      ; 1.101      ;
; 0.738 ; manchester_counter         ; m_a_bit2                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.026      ;
; 0.742 ; manchester_counter         ; m_a_bit3                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.030      ;
; 0.743 ; manchester_counter         ; m_a_bit4                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.031      ;
; 0.745 ; manchester_counter         ; m_a_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.033      ;
; 0.746 ; functioncode_counter[1]    ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.898      ;
; 0.754 ; functioncode_counter[0]    ; functioncode_counter[2]       ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.906      ;
; 0.769 ; address_counter[1]         ; address_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.921      ;
; 0.833 ; address_counter[0]         ; address_counter[2]            ; CLK          ; CLK         ; 0.000        ; 0.000      ; 0.985      ;
; 0.834 ; r_state.check_functioncode ; f_state.get_info              ; CLK          ; CLK         ; 0.000        ; 0.238      ; 1.224      ;
; 0.843 ; m1                         ; m_a_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.131      ;
; 0.858 ; respond_flag               ; f_state.manchester_converting ; CLK          ; CLK         ; -0.500       ; 0.238      ; 0.748      ;
; 0.912 ; manchester_bit             ; m_a_bit1                      ; CLK          ; CLK         ; 0.000        ; 0.136      ; 1.200      ;
+-------+----------------------------+-------------------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLK'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                        ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; CLK   ; Rise       ; CLK                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[10]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[10]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[11]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[11]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[12]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[12]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[13]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[13]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[14]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[14]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[15]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[15]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[17]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[17]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[8]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[8]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; Respond_Data[9]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; Respond_Data[9]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; address_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; address_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.get_data              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.get_data              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.get_info              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.get_info              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; f_state.manchester_converting ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; f_state.manchester_converting ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; fault                         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; fault                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; functioncode_counter[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; functioncode_counter[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m1                            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m1                            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_a_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_a_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit1                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit2                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit3                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; m_f_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; m_f_bit4                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; manchester_bit                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; manchester_bit                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; manchester_counter            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; manchester_counter            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; output_data                   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; output_data                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.check_address         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.check_address         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.check_functioncode    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.check_functioncode    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Fall       ; r_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Fall       ; r_state.idle                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[3]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[3]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_counter[4]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_counter[4]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; respond_flag                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLK   ; Rise       ; respond_flag                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLK   ; Rise       ; start_bit1                    ;
+--------+--------------+----------------+------------------+-------+------------+-------------------------------+


+--------------------------------------------------------------------------------+
; Setup Times                                                                    ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; 2.660  ; 2.660  ; Rise       ; CLK             ;
; RESET            ; CLK        ; 3.353  ; 3.353  ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 3.080  ; 3.080  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; -0.320 ; -0.320 ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; -0.319 ; -0.319 ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; -0.228 ; -0.228 ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; 0.390  ; 0.390  ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; 0.350  ; 0.350  ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; 0.367  ; 0.367  ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; 0.365  ; 0.365  ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; 0.336  ; 0.336  ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; 0.399  ; 0.399  ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; 0.280  ; 0.280  ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; 0.230  ; 0.230  ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; 0.293  ; 0.293  ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; 0.314  ; 0.314  ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; 3.071  ; 3.071  ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; 3.034  ; 3.034  ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; 3.080  ; 3.080  ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; -2.100 ; -2.100 ; Rise       ; CLK             ;
; RESET            ; CLK        ; -2.834 ; -2.834 ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 0.440  ; 0.440  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; 0.440  ; 0.440  ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; 0.439  ; 0.439  ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; 0.348  ; 0.348  ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; -0.270 ; -0.270 ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; -0.230 ; -0.230 ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; -0.247 ; -0.247 ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; -0.245 ; -0.245 ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; -0.216 ; -0.216 ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; -0.279 ; -0.279 ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; -0.160 ; -0.160 ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; -0.110 ; -0.110 ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; -0.173 ; -0.173 ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; -0.194 ; -0.194 ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; -2.951 ; -2.951 ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; -2.914 ; -2.914 ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; -2.960 ; -2.960 ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 3.783 ; 3.783 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 3.783 ; 3.783 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -2.970   ; 0.215 ; N/A      ; N/A     ; -1.222              ;
;  CLK             ; -2.970   ; 0.215 ; N/A      ; N/A     ; -1.222              ;
; Design-wide TNS  ; -119.966 ; 0.0   ; 0.0      ; 0.0     ; -58.222             ;
;  CLK             ; -119.966 ; 0.000 ; N/A      ; N/A     ; -58.222             ;
+------------------+----------+-------+----------+---------+---------------------+


+--------------------------------------------------------------------------------+
; Setup Times                                                                    ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; 4.696  ; 4.696  ; Rise       ; CLK             ;
; RESET            ; CLK        ; 6.217  ; 6.217  ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 5.245  ; 5.245  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; -0.320 ; -0.320 ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; -0.319 ; -0.319 ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; -0.228 ; -0.228 ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; 0.784  ; 0.784  ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; 0.796  ; 0.796  ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; 0.833  ; 0.833  ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; 0.745  ; 0.745  ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; 0.698  ; 0.698  ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; 0.794  ; 0.794  ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; 0.688  ; 0.688  ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; 0.539  ; 0.539  ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; 0.652  ; 0.652  ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; 0.675  ; 0.675  ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; 5.221  ; 5.221  ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; 5.225  ; 5.225  ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; 5.245  ; 5.245  ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Hold Times                                                                     ;
+------------------+------------+--------+--------+------------+-----------------+
; Data Port        ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+------------------+------------+--------+--------+------------+-----------------+
; DATA             ; CLK        ; -2.100 ; -2.100 ; Rise       ; CLK             ;
; RESET            ; CLK        ; -2.834 ; -2.834 ; Fall       ; CLK             ;
; in_switches[*]   ; CLK        ; 0.693  ; 0.693  ; Fall       ; CLK             ;
;  in_switches[0]  ; CLK        ; 0.693  ; 0.693  ; Fall       ; CLK             ;
;  in_switches[1]  ; CLK        ; 0.692  ; 0.692  ; Fall       ; CLK             ;
;  in_switches[2]  ; CLK        ; 0.547  ; 0.547  ; Fall       ; CLK             ;
;  in_switches[3]  ; CLK        ; -0.270 ; -0.270 ; Fall       ; CLK             ;
;  in_switches[4]  ; CLK        ; -0.230 ; -0.230 ; Fall       ; CLK             ;
;  in_switches[5]  ; CLK        ; -0.247 ; -0.247 ; Fall       ; CLK             ;
;  in_switches[6]  ; CLK        ; -0.245 ; -0.245 ; Fall       ; CLK             ;
;  in_switches[7]  ; CLK        ; -0.216 ; -0.216 ; Fall       ; CLK             ;
;  in_switches[8]  ; CLK        ; -0.279 ; -0.279 ; Fall       ; CLK             ;
;  in_switches[9]  ; CLK        ; -0.160 ; -0.160 ; Fall       ; CLK             ;
;  in_switches[10] ; CLK        ; -0.110 ; -0.110 ; Fall       ; CLK             ;
;  in_switches[11] ; CLK        ; -0.173 ; -0.173 ; Fall       ; CLK             ;
;  in_switches[12] ; CLK        ; -0.194 ; -0.194 ; Fall       ; CLK             ;
;  in_switches[13] ; CLK        ; -2.951 ; -2.951 ; Fall       ; CLK             ;
;  in_switches[14] ; CLK        ; -2.914 ; -2.914 ; Fall       ; CLK             ;
;  in_switches[15] ; CLK        ; -2.960 ; -2.960 ; Fall       ; CLK             ;
+------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 7.179 ; 7.179 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_DATA_debigging ; CLK        ; 3.783 ; 3.783 ; Rise       ; CLK             ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLK        ; CLK      ; 150      ; 143      ; 356      ; 44       ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLK        ; CLK      ; 150      ; 143      ; 356      ; 44       ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 18    ; 18   ;
; Unconstrained Input Port Paths  ; 29    ; 29   ;
; Unconstrained Output Ports      ; 1     ; 1    ;
; Unconstrained Output Port Paths ; 1     ; 1    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 12.1 Build 177 11/07/2012 SJ Full Version
    Info: Processing started: Wed Apr 16 08:52:19 2014
Info: Command: quartus_sta SN_program_v01 -c SN_program_v01
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 4 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 2 of the 2 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'SN_program_v01.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLK CLK
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.970
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.970      -119.966 CLK 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 CLK 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -58.222 CLK 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.097
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.097       -40.350 CLK 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 CLK 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -58.222 CLK 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 414 megabytes
    Info: Processing ended: Wed Apr 16 08:52:20 2014
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


